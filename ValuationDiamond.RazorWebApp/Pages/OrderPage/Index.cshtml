@page
@model ValuationDiamond.RazorWebApp.Pages.OrderPage.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form method="get" class="form-inline mb-3">
    <div class="input-group" style="width: 80%;">
        <input type="text" id="orderCode" name="OrderCode" value="@Model.OrderCode" class="form-control" placeholder="Search by Order Code" />
        <input type="text" id="staffName" name="StaffName" value="@Model.StaffName" class="form-control" placeholder="Search by Staff Name" />
        <input type="text" id="customer" name="Customer" value="@Model.Customer" class="form-control" placeholder="Search by Customer" />

        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].OrderId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].PayStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Payment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Day)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].TotalAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Customer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].OrderCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].StaffName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Order) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PayStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Payment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Day)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StaffName)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.OrderId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.OrderId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.OrderId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Page navigation example">
    <ul class="pagination">
        @if (Model.Pager.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-route-pageIndex="@(Model.Pager.CurrentPage - 1)"
                   asp-route-OrderCode="@Model.OrderCode"
                   asp-route-StaffName="@Model.StaffName"
                   asp-route-Customer="@Model.Customer">
                    Previous
                </a>
            </li>
        }
        @for (int i = 1; i <= Model.Pager.TotalPages; i++)
        {
            <li class="page-item @(Model.Pager.CurrentPage == i ? "active" : "")">
                <a class="page-link"
                   asp-route-pageIndex="@i"
                   asp-route-OrderCode="@Model.OrderCode"
                   asp-route-StaffName="@Model.StaffName"
                   asp-route-Customer="@Model.Customer">
                    @i
                </a>
            </li>
        }
        @if (Model.Pager.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-route-pageIndex="@(Model.Pager.CurrentPage + 1)"
                   asp-route-OrderCode="@Model.OrderCode"
                   asp-route-StaffName="@Model.StaffName"
                   asp-route-Customer="@Model.Customer">
                    Next
                </a>
            </li>
        }
    </ul>
</nav>
