@page
@using X.PagedList.Mvc.Core;
@model ValuationDiamond.RazorWebApp.Pages.CertificateValuationPage.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<form method="get">
    <div class="row mb-3 justify-content-around">
        <div class="col-md-3">
            <label for="CustomerName">CustomerName:</label>
            <input type="text" id="CustomerName" name="CustomerName" class="form-control" />
        </div>
        <div class="col-md-3">
            <label for="Price">Price:</label>
            <input type="number" id="Price" name="Price" class="form-control" />
        </div>
        <div class="col-md-3">
            <label for="Status">Status:</label>
            <input type="text" id="Status" name="Status" class="form-control" />
        </div>
        <div class="col-md-auto align-self-end">
            <button type="submit" class="btn btn-primary mt-2">Search</button>
        </div>
    </div>
</form>
<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].Day)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].ValuateDiamond)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].Sign)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].ManagerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].CustomerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValuationCertificates[0].CustomerEmail)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ValuationCertificates)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Day)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValuateDiamond.ValuationStaffName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sign)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManagerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerEmail)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ValuationCertificateId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ValuationCertificateId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ValuationCertificateId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager(Model.ValuationCertificates, page => Url.Page("./Index", new { CustomerName = Model.CustomerName, Status = Model.Status, Price = Model.Price, PageNumber = page }))
