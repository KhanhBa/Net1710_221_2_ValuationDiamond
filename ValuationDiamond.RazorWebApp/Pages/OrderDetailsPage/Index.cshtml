@page
@model ValuationDiamond.RazorWebApp.Pages.OrderDetailsPage.IndexModel

@{
    ViewData["Title"] = "Index";
}
@{
    int itemPerPage = Model.PageSize;
    int startIndex = (Model.PageIndex - 1) * itemPerPage;
    var itemsToShow = Model.OrderDetail.Skip(startIndex).Take(itemPerPage);
}
<style>
    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

        .pagination a {
            color: #333;
            text-decoration: none;
            padding: 5px 10px;
            margin: 0 5px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

            .pagination a.active {
                background-color: #333;
                color: #fff;
            }
</style>

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form method="get">
    <div>
        <label for="Status">Status</label>
        <input type="text" id="Status" name="Status" placeholder="Search by status" class="form-control" />
    </div>
    <div>
        <label for="txtDetailCode">Detail Code</label>
        <input type="text" id="DetailCode" name="DetailCode" placeholder="Search by detail code" class="form-control" />
    </div>
    <div>
        <label for="Description">Description</label>
        <input type="text" id="Description" name="Description" placeholder="Search by description" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>
<table class="table">

    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetail[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetail[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetail[0].DetailCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetail[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetail[0].EstimateLength)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetail[0].OrderId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetail[0].ServiceId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderDetail)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DetailCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EstimateLength)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ServiceId)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.OrderDetailId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.OrderDetailId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.OrderDetailId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="pagination">
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <a href="?PageIndex=@i" class="@(i == Model.PageIndex ? "active" : "")">@i</a>
    }
</div>